{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC\\\\CDAC_Project\\\\thebookshelf-frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './LoginPage.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('CUSTOMER');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/users/login', null, {\r\n        params: { email, password, role }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const { redirectUrl } = response.data;\r\n        if (redirectUrl) {\r\n          navigate(redirectUrl);\r\n        } else {\r\n          setError('Unexpected response from server.');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials.');\r\n      console.error('Login error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"role\">Role:</label>\r\n          <select\r\n            id=\"role\"\r\n            className=\"form-control\"\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n          >\r\n            <option value=\"CUSTOMER\">Customer</option>\r\n            <option value=\"ADMIN\">Admin</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n        {error && <p className=\"text-danger mt-2\">{error}</p>}\r\n      </form>\r\n      <div className=\"mt-3\">\r\n        <a href=\"/register\" className=\"btn btn-secondary\">New to The Bookshelf? Register</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './LoginPage.css';\nimport backgroundImage from '../assets/your-image.jpg'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('CUSTOMER');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8080/users/login', null, {\n        params: {\n          email,\n          password,\n          role\n        }\n      });\n      if (response.status === 200) {\n        const {\n          redirectUrl\n        } = response.data;\n        if (redirectUrl) {\n          navigate(redirectUrl);\n        } else {\n          setError('Unexpected response from server.');\n        }\n      }\n    } catch (err) {\n      setError('Login failed. Please check your credentials.');\n      console.error('Login error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            className: \"form-control\",\n            value: role,\n            onChange: e => setRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CUSTOMER\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ADMIN\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger mt-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          className: \"btn btn-secondary\",\n          children: \"New to The Bookshelf? Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"fVA8HWnbu8lw/W4++BQFZweLetI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","backgroundImage","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","role","setRole","error","setError","navigate","handleLogin","e","preventDefault","response","post","params","status","redirectUrl","data","err","console","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["D:/CDAC/CDAC_Project/thebookshelf-frontend/src/components/LoginPage.js"],"sourcesContent":["/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './LoginPage.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('CUSTOMER');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/users/login', null, {\r\n        params: { email, password, role }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const { redirectUrl } = response.data;\r\n        if (redirectUrl) {\r\n          navigate(redirectUrl);\r\n        } else {\r\n          setError('Unexpected response from server.');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials.');\r\n      console.error('Login error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"role\">Role:</label>\r\n          <select\r\n            id=\"role\"\r\n            className=\"form-control\"\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n          >\r\n            <option value=\"CUSTOMER\">Customer</option>\r\n            <option value=\"ADMIN\">Admin</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n        {error && <p className=\"text-danger mt-2\">{error}</p>}\r\n      </form>\r\n      <div className=\"mt-3\">\r\n        <a href=\"/register\" className=\"btn btn-secondary\">New to The Bookshelf? Register</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './LoginPage.css';\r\nimport backgroundImage from '../assets/your-image.jpg'; // Adjust the path as necessary\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('CUSTOMER');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/users/login', null, {\r\n        params: { email, password, role }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const { redirectUrl } = response.data;\r\n        if (redirectUrl) {\r\n          navigate(redirectUrl);\r\n        } else {\r\n          setError('Unexpected response from server.');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials.');\r\n      console.error('Login error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"login-page\"\r\n      style={{\r\n        backgroundImage: `url(${backgroundImage})`,\r\n      }}\r\n    >\r\n      <div className=\"login-container\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"role\">Role:</label>\r\n            <select\r\n              id=\"role\"\r\n              className=\"form-control\"\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            >\r\n              <option value=\"CUSTOMER\">Customer</option>\r\n              <option value=\"ADMIN\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n          {error && <p className=\"text-danger mt-2\">{error}</p>}\r\n        </form>\r\n        <div className=\"mt-3\">\r\n          <a href=\"/register\" className=\"btn btn-secondary\">New to The Bookshelf? Register</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}